/*
1) ученики (ID_ученика, ФИО, дата рождения, пол, ID_класса)
2) учителя (ID_учителя, ФИО, дата рождения, пол, стаж, ID_предмета)
3) классы (ID_класса, название класса, количество учеников, классный руководитель (fk на учителей))
4) предметы (ID_предмета, предмет, класс (просто как номер, в какой параллели ведется))
5) кабинеты (ID_кабинета, номер кабинета, этаж)
6) уроки (факт) (ID_предмета, ID_класса, ID_кабинета, ID_учителя, дата, оценка (может быть null))

*/

-- School DB. Вывести средний балл учеников для каждой параллели по каждому предмету. Результаты вывести в виде транспонированной таблицы (оси - предмет и параллель).

SELECT предмет
     , [1_класс]
     , [2_класс]
     , [3_класс]
     , [4_класс]
     , [5_класс]
     , [6_класс]
     , [7_класс]
     , [8_класс]
     , [9_класс]
     , [10_класс]
     , [11_класс] 
FROM (
    SELECT s.предмет
         , c.название_класса
         , CASE 
                WHEN c.название_класса like '1%' THEN '1_класс'
                WHEN c.название_класса like '2%' THEN '2_класс'
                WHEN c.название_класса like '3%' THEN '3_класс'
                WHEN c.название_класса like '4%' THEN '4_класс'
                WHEN c.название_класса like '5%' THEN '5_класс'
                WHEN c.название_класса like '6%' THEN '6_класс'
                WHEN c.название_класса like '7%' THEN '7_класс'
                WHEN c.название_класса like '8%' THEN '8_класс'
                WHEN c.название_класса like '9%' THEN '9_класс'
                WHEN c.название_класса like '10%' THEN '10_класс'
                WHEN c.название_класса like '11%' THEN '11_класс'
           END параллель
         , AVG(l.оценка) средний_балл
      FROM уроки l
     INNER JOIN   классы c ON l.ID_класса = c.ID_класса
     INNER JOIN предметы s ON l.ID_предмета = s.ID_предмета
     GROUP BY s.предмет, c.название_класса
) AS Source
PIVOT ( AVG(средний_балл)
        FOR параллель IN ([1_класс], [2_класс], [3_класс], [4_класс], [5_класс], [6_класс], [7_класс], [8_класс], [9_класс], [10_класс], [11_класс])
) AS PivotTable;

-- School DB. Проверить, повышает ли преподаватель оценки в свой день рождения (настроение-то лучше :). Вывести преподавателя, средний балл в день рождения, средний балл за остальные дни.

SELECT t.ФИО Преподаватель
     , AVG(CASE 
               WHEN l.Дата = t.Дата_рождения 
               THEN l.оценка 
            END
          ) AS Средний_балл_в_день_рождения
     , AVG(CASE 
               WHEN l.Дата != t.Дата_рождения 
               THEN l.оценка 
           END
          ) AS Средний_балл_в_остальные_дни
  FROM уроки l
  JOIN учителя t ON l.ID_учителя = t.ID_учителя
 GROUP BY t.ФИО;
